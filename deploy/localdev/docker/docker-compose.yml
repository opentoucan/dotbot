version: '3.8'

services:
  mongo1:
    container_name: mongo1
    hostname: mongo1
    image: docker.io/library/mongo:4.4.6
    volumes:
      - mongodata1:/data/db
    expose:
      - 27017
    ports:
      - "27017:27017"
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    hostname: mongo2
    image: docker.io/library/mongo:4.4.6
    volumes:
      - mongodata2:/data/db
    expose:
      - 27017
    ports:
      - "27018:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    hostname: mongo3
    image: docker.io/library/mongo:4.4.6
    volumes:
      - mongodata3:/data/db
    expose:
      - 27017
    ports:
      - "27019:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongosetup:
    image: mongo-setup
    build: "."
    container_name: mongosetup
    depends_on:
      mongo1:
        condition: service_started
    volumes:
      - mongostatus:/data/
  rabbitmq:
    image: docker.io/library/rabbitmq:3.12.0-management
    container_name: rabbitmq
    env_file:
      - .rabbitmq_env
    ports:
      - "5672:5672"
      - "15672:15672"
volumes:
  mongodata1:
  mongodata2:
  mongodata3:
  mongostatus: