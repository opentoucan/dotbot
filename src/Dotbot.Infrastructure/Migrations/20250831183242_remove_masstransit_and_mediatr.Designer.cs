// <auto-generated />
using System;
using Dotbot.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dotbot.Infrastructure.Migrations
{
    [DbContext(typeof(DotbotContext))]
    [Migration("20250831183242_remove_masstransit_and_mediatr")]
    partial class remove_masstransit_and_mediatr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dotbot")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.CommandAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomCommandId")
                        .HasColumnType("uuid");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomCommandId");

                    b.ToTable("command_attachments", "dotbot");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.CustomCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GuildId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("custom_commands", "dotbot");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.Guild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guilds", "dotbot");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.Xkcd", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ComicNumber")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Posted")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Xkcds", "dotbot");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.CommandAttachment", b =>
                {
                    b.HasOne("Dotbot.Infrastructure.Entities.CustomCommand", null)
                        .WithMany("Attachments")
                        .HasForeignKey("CustomCommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.CustomCommand", b =>
                {
                    b.HasOne("Dotbot.Infrastructure.Entities.Guild", null)
                        .WithMany("CustomCommands")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.CustomCommand", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Dotbot.Infrastructure.Entities.Guild", b =>
                {
                    b.Navigation("CustomCommands");
                });
#pragma warning restore 612, 618
        }
    }
}
