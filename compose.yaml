x-podman:
  in_pod: false

services:
  rabbitmq:
    container_name: rabbitmq
    image: docker.io/library/rabbitmq:4.1.4-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
  localstack:
    container_name: localstack
    image: docker.io/localstack/localstack:latest
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
    volumes:
      - "$XDG_RUNTIME_DIR/podman/podman.sock:/var/run/docker.sock"
  postgres:
    container_name: postgres
    image: docker.io/library/postgres:18.0
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: "dotbot"
      POSTGRES_PASSWORD: "yourWeak(!)Password"
      POSTGRES_DB: "dotbot"
  dragonfly:
    container_name: dragonfly
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    ports:
        - '6379:6379'
    environment:
      DFLY_requirepass: local
  motur:
    container_name: motur
    image: ghcr.io/opentoucan/motur:3.1.0
    ports:
      - '8081:8080'
    env_file: .env
    configs:
        - source: motur.yaml
          target: /app/config.yaml
  ngrok:
    container_name: ngrok
    image: docker.io/ngrok/ngrok:3-debian
    env_file: .env
    command: 'http host.docker.internal:8080'
    ports:
        - '4040:4040'
    extra_hosts:
        - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
        - postgres
    ports:
      - '3000:3000'
    configs:
      - source: grafana.yaml
        target: /etc/grafana/provisioning/dashboards/main.yaml
      - source: datasource.yaml
        target: /etc/grafana/provisioning/datasources/datasource.yaml
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    configs:
      - source: prometheus.yaml
        target: /etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    extra_hosts:
        - "host.docker.internal:host-gateway"
configs:
  grafana.yaml:
    content: |
      apiVersion: 1
      providers:
        - name: "Dashboard provider"
          orgId: 1
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
              path: /var/lib/grafana/dashboards
              foldersFromFilesStructure: true
  datasource.yaml:
    content: |
         apiVersion: 1
         prune: true
         datasources:
           - name: Prometheus
             uid: DS_PROMETHEUS
             type: prometheus
             access: proxy
             url: http://prometheus:9090
             isDefault: true
           - name: Postgres
             uid: DS_POSTGRES
             type: postgres
             url: postgres:5432
             user: dotbot
             jsonData:
               database: dotbot
               sslmode: 'disable'
             secureJsonData:
               password: 'yourWeak(!)Password'
  prometheus.yaml:
    content: |
      global:
        scrape_interval: 10s
      scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - host.docker.internal:8080
  motur.yaml:
    content: |
        enabled_sites:
            - www.autotrader.co.uk
            - www.carandclassic.com
            - www.pistonheads.com
            - www.facebook.com
            - www.gumtree.com
        scraper:
            chrome_binary_location: /usr/bin/chromium
            disable_sandbox: True
            image_path: /tmp
