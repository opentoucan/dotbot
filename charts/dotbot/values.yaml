nameOverride: ""
fullnameOverride: ""
global:
  env:
    ASPNETCORE_ENVIRONMENT: 'Production'
gateway:
  replicaCount: 1
  image:
    repository: "ghcr.io/opentoucan"
    tag: "1.0.4"
    imagePullPolicy: IfNotPresent
    name: "dotbot.gateway"
    digest: "sha256:7c9fc7ef8aa538582639b99224ea86f67fe87b73153601a33fdf8fefba3fba00"
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 1024
    runAsGroup: 1024
    fsGroup: 1024
    supplementalGroups: [1024]
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1024
    allowPrivilegeEscalation: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumes: []
  volumeMounts: []

migrator:
  image:
    repository: "ghcr.io/opentoucan"
    tag: "1.0.4"
    imagePullPolicy: IfNotPresent
    name: "dotbot.migration"
    digest: "sha256:3166df982141f8abd8e5dfaa9194df6e92324e759dac4bb7dd5b352d0c4d0577"
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 1024
    runAsGroup: 1024
    fsGroup: 1024
    supplementalGroups: [1024]
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1024
    allowPrivilegeEscalation: false
  volumes:
    - name: cache-volume
      emptyDir:
        sizeLimit: 500Mi
  volumeMounts:
    - mountPath: /cache
      name: cache-volume
  env:
    - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
      value: /cache

# environment variables for configMap
env:
  RabbitMQ__Endpoint: 'rabbitmq'
  RabbitMQ__port: '5672'
  S3__ServiceUrl: 'minio:9000'
  OTEL_EXPORTER_OTLP_ENDPOINT: 'http://opentelemetry-operator.default.svc.cluster.local:8080' 
configMapAnnotations: {}

# Secrets
existingAppSecret: 'dotbot-secret'
existingMigratorSecret: 'dotbot-migrator-secret'
# discord:
#   publicKey: ''
#   botToken: ''
#   webhooks:
#     xkcd: ''
# appUserDBConnectionString: ''
# migratorUserDBConnectionString: ''
# rabbitMQCredentials:
#   user: 'test'
#   password: 'test'
# objectStorageCredentials:
#   accessKeyId: 'dev'
#   secretAccessKey: 'dev'

service:
  name: http
  type: LoadBalancer
  port: 80
  targetPort: 8080
  protocol: TCP

serviceAccount:
  create: true
  annotations: {}

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  path: /
  pathType: Prefix
  hosts:
    - dotbot.local
  tls: []

jobs:
  - name: xkcd-job
    securityContext:
      runAsUser: 1024
      runAsGroup: 1024
      fsGroup: 1024
    image:
      repository: "ghcr.io/opentoucan"
      tag: "1.0.4"
      imagePullPolicy: Always
      name: "xkcd.job"
      digest: "sha256:9e93263c32be144b1c2424572972de48b6f3a81549de76d084703b99e71903de"
    schedule: "0 * * * 1,3,5"
    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    concurrencyPolicy: Forbid
    restartPolicy: Never
    ttlSecondsAfterFinished: 2400
