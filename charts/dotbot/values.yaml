nameOverride: ""
fullnameOverride: ""
global:
  env:
    ASPNETCORE_ENVIRONMENT: 'Production'
gateway:
  replicaCount: 1
  image:
    repository: "ghcr.io/opentoucan"
    tag: "1.0.6"
    imagePullPolicy: IfNotPresent
    name: "dotbot.gateway"
    digest: "sha256:d70639cdd36cec234cf44920646cb60247fb30b7c60ee3be52467e1458f98579"
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 1024
    runAsGroup: 1024
    fsGroup: 1024
    supplementalGroups: [1024]
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1024
    allowPrivilegeEscalation: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumes: []
  volumeMounts: []

migrator:
  image:
    repository: "ghcr.io/opentoucan"
    tag: "1.0.6"
    imagePullPolicy: IfNotPresent
    name: "dotbot.migration"
    digest: "sha256:8bd156302bd5156e0a957973c410436eb768a23f99e23409a30a5a622fbe64b4"
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 1024
    runAsGroup: 1024
    fsGroup: 1024
    supplementalGroups: [1024]
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1024
    allowPrivilegeEscalation: false
  volumes:
    - name: cache-volume
      emptyDir:
        sizeLimit: 500Mi
  volumeMounts:
    - mountPath: /cache
      name: cache-volume
  env:
    - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
      value: /cache

# environment variables for configMap
env: {}
#  RabbitMQ__Endpoint: 'rabbitmq'
#  RabbitMQ__port: '5672'
#  S3__ServiceUrl: 'minio:9000'
#  OTEL_EXPORTER_OTLP_ENDPOINT: 'http://opentelemetry-operator.default.svc.cluster.local:8080' 
configMapAnnotations: {}

# Secrets
existingAppSecret: ''
existingMigratorSecret: ''
# discord:
#   publicKey: ''
#   botToken: ''
#   webhooks:
#     xkcd: ''
# appUserDBConnectionString: ''
# migratorUserDBConnectionString: ''
# rabbitMQCredentials:
#   user: 'test'
#   password: 'test'
# objectStorageCredentials:
#   accessKeyId: 'dev'
#   secretAccessKey: 'dev'

service:
  name: http
  type: LoadBalancer
  port: 80
  targetPort: 8080
  protocol: TCP

serviceAccount:
  create: true
  annotations: {}

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  path: /
  pathType: Prefix
  hosts:
    - dotbot.local
  tls: []

jobs:
  - name: xkcd-job
    securityContext:
      runAsUser: 1024
      runAsGroup: 1024
      fsGroup: 1024
    image:
      repository: "ghcr.io/opentoucan"
      tag: "1.0.6"
      imagePullPolicy: Always
      name: "xkcd.job"
      digest: "sha256:6e2eca4e4cb3b1dbd49069a4aacfae8d22ae577d6ace28b89876077132cac54d"
    schedule: "0 * * * 1,3,5"
    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    concurrencyPolicy: Forbid
    restartPolicy: Never
    ttlSecondsAfterFinished: 2400
