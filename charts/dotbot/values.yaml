nameOverride: ""
fullnameOverride: ""
global:
  env:
    ASPNETCORE_ENVIRONMENT: 'Production'
api:
  replicaCount: 1
  image:
    registry: ghcr.io
    repository: opentoucan/dotbot.api
    tag: 3.0.0
    digest: sha256:5eec3c43855ab05666970eeec0ebd2ee9da5a01a3fb3671a10ebca57126f087a
    imagePullPolicy: IfNotPresent
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 2048
    runAsGroup: 2048
    fsGroup: 2048
    supplementalGroups: [2048]
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 2048
    allowPrivilegeEscalation: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumes: []
  volumeMounts: []

migrator:
  image:
    registry: ghcr.io
    repository: opentoucan/dotbot.migration
    tag: 3.0.0
    digest: sha256:1f30c60861e066a40832b5899fd943fa282ef10c82129b6c385117b58191816e
    imagePullPolicy: IfNotPresent
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    runAsUser: 2048
    runAsGroup: 2048
    fsGroup: 2048
    supplementalGroups: [2048]
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 2048
    allowPrivilegeEscalation: false
  volumes:
    - name: cache-volume
      emptyDir:
        sizeLimit: 500Mi
  volumeMounts:
    - mountPath: /cache
      name: cache-volume
  env:
    - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
      value: /cache

# environment variables for configMap
env: {}
#  RabbitMQ__Endpoint: 'rabbitmq'
#  RabbitMQ__port: '5672'
#  S3__ServiceUrl: 'minio:9000'
#  OTEL_EXPORTER_OTLP_ENDPOINT: 'http://opentelemetry-operator.default.svc.cluster.local:8080'
configMapAnnotations: {}

# Secrets
existingAppSecret: ''
existingMigratorSecret: ''
# discord:
#   publicKey: ''
#   botToken: ''
#   webhooks:
#     xkcd: ''
# appUserDBConnectionString: ''
# migratorUserDBConnectionString: ''
# rabbitMQCredentials:
#   user: 'test'
#   password: 'test'
# objectStorageCredentials:
#   accessKeyId: 'dev'
#   secretAccessKey: 'dev'

service:
  name: http
  type: LoadBalancer
  port: 80
  targetPort: 8080
  protocol: TCP

serviceAccount:
  create: true
  annotations: {}

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  path: /
  pathType: Prefix
  hosts:
    - dotbot.local
  tls: []

jobs: []
