{{- range $job := .Values.jobs }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{- include "dotbot.name" $ }}-{{ $job.name }}"
  labels:
    {{- include "dotbot.labels" $ | nindent 4 }}
spec:
  concurrencyPolicy: {{ $job.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: {{ $job.ttlSecondsAfterFinished }}
      template:
        metadata:
          labels:
            app: {{ include "dotbot.fullname" $ }}
            cron: {{ $job.name }}
        spec:
          restartPolicy: OnFailure
        {{- if hasKey $job "securityContext" }}
          {{- if $job.securityContext.runAsUser }}
          securityContext:
            runAsUser: {{ $job.securityContext.runAsUser }}
            {{- if $job.securityContext.runAsGroup }}
            runAsGroup: {{ $job.securityContext.runAsGroup }}
            {{- end }}
            {{- if $job.securityContext.fsGroup }}
            fsGroup: {{ $job.securityContext.fsGroup }}
            {{- end }}
          {{- end }}
        {{- end }}
          containers:
            - image: {{ $job.image.repository }}:{{ $job.image.tag | default $.Chart.AppVersion }}{{ if $job.image.digest }}@{{ $job.image.digest }}{{ end }}
              imagePullPolicy: {{ $job.image.imagePullPolicy }}
              name: {{ $job.name }}
              envFrom:
                - secretRef:
                    name: {{ $job.secretName }}
            {{- if $job.command }}
              command: {{ $job.command }}
            {{- end }}
            {{- with $job.args }}
              args:
{{ toYaml . | indent 14 }}
              {{- end }}
            {{- with $job.resources }}
              resources:
{{ toYaml . | indent 16 }}
            {{- end }}
  schedule: {{ $job.schedule | quote }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit }}
{{- end }}