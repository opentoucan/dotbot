name: Release Helm Chart
on:
  push:
    tags:
      - 'chart-v*'
      - 'chart-*'
jobs:
  helm-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Install dependency charts
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm install postgresql oci://registry-1.docker.io/bitnamicharts/postgresql --set auth.username=test --set auth.password=test --set auth.database=test --set auth.postgresPassword=test
          helm install rabbitmq oci://registry-1.docker.io/bitnamicharts/rabbitmq --set auth.username=test --set auth.password=test
          helm install minio oci://registry-1.docker.io/bitnamicharts/minio
          kubectl create secret generic dotbot-secret \
            --from-literal=TestMode=true \
            --from-literal=AWS_ACCESS_KEY_ID='test' \
            --from-literal=AWS_SECRET_ACCESS_KEY='test' \
            --from-literal=ConnectionStrings__dotbot='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;' \
            --from-literal=RabbitMQ__Password='test' \
            --from-literal=RabbitMQ__User='test'
          kubectl create secret generic dotbot-migrator-secret \
            --from-literal=CONNECTIONSTRING='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;'
            

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}
        
  helm-release:
    needs: helm-test
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing
    runs-on: ubuntu-latest
    environment: 
      name: 'Production'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Prep
        id: prep
        run: |
          echo "SEMVER=$(echo '${{ github.ref_name }}' | grep -o -P '(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?')" >> $GITHUB_OUTPUT
      
      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.12.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.PAT }}"
          CR_GENERATE_RELEASE_NOTES: true

      # see https://github.com/helm/chart-releaser/issues/183
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          helm push ".cr-release-packages/dotbot-${{ steps.prep.outputs.SEMVER }}.tgz" "oci://ghcr.io/${{ github.repository_owner }}/charts"