---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: ci

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
      - 'charts/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
      - 'charts/**'
env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          global-json-file: global.json

      - name: Verify formatting
        run: dotnet format --verify-no-changes

  tests:
    runs-on: ubuntu-24.04
    permissions:
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          global-json-file: global.json

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test with dotnet
        run: dotnet test -- --report-trx

      - name: Upload dotnet test results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: dotnet-results
          path: ./tests/**/TestResults
        if: ${{ always() }}

      - name: Install uv
        uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5.4.0
        with:
          version: "0.5.30"

      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
            python-version: '3.13'
      - name: Merge sarif files
        run: uvx --no-cache --no-config --from sarif-tools@latest sarif copy src/**/*.sarif --out dotbot.sarif

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@1b549b9259bda1cb5ddde3b41741a82a2d15a841 # v3.28.13
        if: success() || failure()
        with:
            sarif_file: dotbot.sarif

  build:
    runs-on: ubuntu-24.04
    needs: [tests]
    strategy:
      matrix:
        project: [
          {image: "Dotbot.Api", path: "src/Dotbot.Api/Dockerfile"},
          {image: "Dotbot.Migration", path: "src/Dotbot.Infrastructure/migration.Dockerfile"},
        ]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ secrets.PAT }}

      - name: Setup Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a #v3.8.1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 #v3.10.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: semver_tag
        run: |
          GIT_TAG=${{ github.ref_name  }}
          echo "TAG=${GIT_TAG#*v}" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.project.image }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.semver_tag.outputs.TAG }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ${{ matrix.project.path }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.semver_tag.outputs.TAG }}

      - name: Sign the image with Cosign
        if: ${{ github.ref_type == 'tag' }}
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.project.image }}@${{ steps.build.outputs.DIGEST }}

  output-migration:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write
    steps:
        - name: Checkout
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
          with:
            token: ${{ secrets.PAT }}

        - name: Setup dotnet
          uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
          with:
            global-json-file: global.json

        - name: Install EF Tool
          run: |
            dotnet tool restore

        - name: Generate SQL migration script
          run: |
            dotnet ef migrations script --idempotent -s ./src/Dotbot.Api -p ./src/Dotbot.Infrastructure -o dotbot-migration.sql

        - name: Upload SQL script artifact
          uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
          with:
            name: dotbot-migration.sql
            path: dotbot-migration.sql
          if: ${{ always() }}
