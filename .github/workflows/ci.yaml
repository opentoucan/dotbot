name: ci

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'charts/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'charts/**'
env:
  REGISTRY: ghcr.io

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          # renovate: datasource=dotnet-version depName=dotnet-sdk
          dotnet-version: '9.0.101'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test with dotnet
        run: dotnet test --logger trx --results-directory "TestResults"
        env:
          Discord__Token: ${{ secrets.DISCORD_TOKEN }}
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results
          path: TestResults
        if: ${{ always() }}

  build:
    if: ${{ contains(fromJson('["main"]'), github.ref_name) }}
    runs-on: ubuntu-latest
    needs: [tests]
    strategy:
      matrix:
        project: [
          {image: "Dotbot.Gateway", path: "src/Dotbot.Gateway/Dockerfile"},
          {image: "Dotbot.Migration", path: "src/Dotbot.Infrastructure/migration.Dockerfile"},
        ]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.project.image }}
          tags: |
            type=sha,format=long
            type=raw,value=latest

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: ${{ matrix.project.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  output-migration:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write
    steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.PAT }}

        - name: Setup dotnet
          uses: actions/setup-dotnet@v3
          with:
            # renovate: datasource=dotnet-version depName=dotnet-sdk
            dotnet-version: '9.0.101'

        - name: Install EF Tool
          run: |
            dotnet new tool-manifest
            dotnet tool install dotnet-ef

        - name: Generate SQL migration script
          run: |
            dotnet ef migrations script --idempotent -s ./src/Dotbot.Gateway -p ./src/Dotbot.Infrastructure -o dotbot-migration.sql

        - name: Upload SQL script artifact
          uses: actions/upload-artifact@v4
          with:
            name: dotbot-migration.sql
            path: dotbot-migration.sql
          if: ${{ always() }}
