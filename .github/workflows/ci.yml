name: ci

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  
jobs:
  code-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      directories: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            Bot.Gateway: 
              - 'src/Bot.Gateway/**'
              - 'src/Xkcd.Sdk/**'
            Xkcd.Job: 
              - 'src/Xkcd.Job/**'
              - 'src/Xkcd.Sdk/**'
            Helm:
              - 'charts/dotbot'

  build:
    needs: code-changes
    runs-on: ubuntu-latest
    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.code-changes.outputs.directories) }}
        exclude: 
          - image: Helm
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: next-semantic-release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          path: src/${{ matrix.image }}
          skip-github-release: true
          skip-github-pull-request: true
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=sha,format=long
            type=semver,pattern={{version}},value=v${{ steps.next-semantic-release.outputs.major }}.${{ steps.next-semantic-release.outputs.minor }}.${{ steps.next-semantic-release.outputs.patch }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: src/${{ matrix.image }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
#  bump-bot-gateway:
#    needs: build
#    runs-on: ubuntu-latest
#    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        
#      - name: Install yq
#        run: |
#          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
#          chmod +x yq
#
#      - name: Bump Helm image version
#        id: image_version
#        env:
#          VERSION: "${{ steps.next_semantic.outputs.new_release_version }}"
#          DIGEST: "${{ github.commit }}"
#        run: |
#          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.tag)=\"v$VERSION\"' charts/dotbot/values.yaml
#          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.digest)=\"$DIGEST\"' charts/dotbot/values.yaml
#
#      - name: Commit Chart.yaml
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: 'chore: bump Bot.Gateway version to ${{ steps.next_semantic.outputs.new_release_version }}'
#          file_pattern: 'values.yaml'
#  
#  bump-chart:
#    runs-on: ubuntu-latest
#    needs: code-changes
#    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
#    strategy:
#      matrix:
#        directory: ${{ fromJSON(needs.code-changes.outputs.directories) }}
#        exclude:
#          - directory: Bot.Gateway
#          - directory: Xkcd.Job
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        
#      - name: Setup Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: 'lts/*'
#
#      - name: Install dependencies
#        run: npm install -D semantic-release semantic-release-monorepo
#        
#      - name: Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: npx semantic-release -e semantic-release-monorepo
#            
#      - name: Install yq
#        run: |
#          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
#          chmod +x yq
#          
#      - name: Bump Helm version
#        id: helm_version
#        env:
#          VERSION: "${{ steps.semantic.outputs.new_release_version }}"
#        run: |
#          yq e -i ".version=\"$VERSION\"" charts/dotbot/Chart.yaml
#          yq e -i ".appVersion="$VERSION\"" charts/dotbot/Chart.yaml
#      - name: Commit Chart.yaml
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: 'chore: bump Chart version to ${{ steps.helm_version.outputs.VERSION }}'
#          file_pattern: 'Chart.yaml'
          
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        image: ${{ fromJSON(needs.code-changes.outputs.directories) }}
        exclude:
          - image: Helm
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          path: src/${{ matrix.image }}
          
#  release-chart:
#    permissions:
#      contents: write
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Configure Git
#        run: |
#          git config user.name "$GITHUB_ACTOR"
#          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
#
#      - name: Install Helm
#        uses: azure/setup-helm@v3
#
#      - name: Run chart-releaser
#        uses: helm/chart-releaser-action@v1.6.0
#        env:
#          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#          CR_SKIP_EXISTING: true