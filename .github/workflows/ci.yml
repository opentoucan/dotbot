name: ci

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/Bot.Gateway/**'
      - 'src/Xkcd.Job/**'
      - 'src/Xkcd.Sdk/**'
      - 'src/ServiceDefaults/**'
      - '!src/Bot.Gateway/CHANGELOG.md'
      - '!src/Xkcd.Job/CHANGELOG.md'

env:
  REGISTRY: ghcr.io
  
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["Bot.Gateway", "Xkcd.Job"]
        test: ["UnitTests", "FunctionalTests"]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Test with dotnet
        run: dotnet test tests/${{ matrix.project }}.${{ matrix.test }} --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results
          path: TestResults
        if: ${{ always() }}
        
  build:
    runs-on: ubuntu-latest
    needs: [tests]
    strategy:
      matrix:
        image: ["Bot.Gateway", "Xkcd.Job"]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
        
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=sha,format=long
            type=raw,value=latest

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: src/${{ matrix.image }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}