name: ci

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  
jobs:
  code-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      directories: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            Bot.Gateway: 
              - 'src/Bot.Gateway/**/!(CHANGELOG.md|release-please-manifest.json)'
              - 'src/Xkcd.Sdk/**'
            Xkcd.Job: 
              - 'src/Xkcd.Job/**/!(CHANGELOG.md|release-please-manifest.json)'
              - 'src/Xkcd.Sdk/**'
  ci:
    needs: code-changes
    runs-on: ubuntu-latest
    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.code-changes.outputs.directories) }}
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Test with dotnet
        run: dotnet test src/${{matrix.image}} --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results
          path: TestResults
        if: ${{ always() }}
        
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT }}
          config-file: src/${{ matrix.image }}/release-please-config.json
          manifest-file: src/${{ matrix.image }}/release-please-manifest.json
          
      - name: Extract Semver release
        id: next_semver
        run: |
           echo "semver=$(\"${{ fromJson(steps.release.outputs.pr).title }}\" | grep -o -P '\d+(\.\d+)+(-[a-z]+[0-9]*)?')" >> $GITHUB_OUTPUT

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.next_semver.outputs.semver }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: src/${{ matrix.image }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
          chmod +x yq

      - name: Extract branch name
        id: extract_branch
        run: |
          PR_NAME=$("${{ steps.release.outputs.pr.headBranchName }} | awk -F-- '{print $NF}'")
          echo "pr_name=$PR_NAME" >> $GITHUB_OUTPUT

      - name: Bump Bot.Gateway Helm image version
        if: contains(fromJson(steps.release.outputs.pr).headBranchName, 'bot.gateway')
        env:
          VERSION: ${{ steps.next_semver.outputs.semver }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.tag)=env(VERSION)' charts/dotbot/values.yaml
          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.digest)=env(DIGEST)' charts/dotbot/values.yaml

      - name: Bump Xkcd.Job Helm image version
        if: contains(fromJson(steps.release.outputs.pr).headBranchName, 'xkcd.job')
        env:
          VERSION: ${{ steps.next_semver.outputs.semver }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          yq -i -e '(.jobs[] | select(.name == "xkcd.job").image.tag)=env(VERSION)' charts/dotbot/values.yaml
          yq -i -e '(.jobs[] | select(.name == "xkcd.job").image.digest)=env(DIGEST)' charts/dotbot/values.yaml

      - name: Commit values.yaml
        uses: stefanzweifel/git-auto-commit-action@v5
        if: contains(steps.release.outputs.pr.labels, 'helm') == false
        env:
          PR_NAME: ${{ fromJson(steps.release.outputs.pr).headBranchName }} | awk -F-- '{print $NF}'
        with:
          commit_message: "chore: bump ${{ steps.next_semver.outputs.semver }}"
          file_pattern: 'charts/dotbot/values.yaml'
          branch: '${{ fromJson(steps.release.outputs.pr).headBranchName }}'