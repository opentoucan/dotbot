name: ci

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  
jobs:
  code-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      directories: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            Bot.Gateway: 
              - 'src/Bot.Gateway/**'
              - 'src/Xkcd.Sdk/**'
              - '!CHANGELOG.md'
            Xkcd.Job: 
              - 'src/Xkcd.Job/**'
              - 'src/Xkcd.Sdk/**'
              - '!CHANGELOG.md'
            Helm:
              - 'charts/dotbot'
              - '!CHANGELOG.md'

  build:
    needs: code-changes
    runs-on: ubuntu-latest
    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.code-changes.outputs.directories) }}
        exclude: 
          - image: Helm
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: next-semver
        id: next-semver
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          skip-github-release: true
          skip-github-pull-request: true
          path: src/${{ matrix.image }}
          
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release version
        id: extract_version
        run: |
          echo "root major ver:  ${{ steps.next-semver.outputs.major }}"
          echo "Bot.Gateway major ver:  ${{ steps.next-semver.outputs.src-Bot.Gateway--major }}"
          echo "bot.gateway major ver:  ${{ steps.next-semver.outputs.src--Bot.Gateway--major }}"
          VERSION=$(${{ steps.next-semver.outputs[format('{0}--major', matrix.image)] }}.${{ steps.next-semver.outputs[format('{0}--minor', matrix.image)] }}.${{ steps.next-semver.outputs[format('{0}--patch', matrix.image)] }} )
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.extract_version.outputs.version }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: src/${{ matrix.image }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          path: src/${{ matrix.image }}
          
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
          chmod +x yq

      - name: Extract branch name
        id: extract_branch
        run: |
          PR_NAME=$("${{ steps.release.outputs.pr.headBranchName }} | awk -F-- '{print $NF}'")
          echo "pr_name=$PR_NAME" >> $GITHUB_OUTPUT

      - name: Bump Bot.Gateway Helm image version
        if: contains(steps.release.outputs.headBranchName, 'bot.gateway')
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.tag)=env(VERSION)' charts/dotbot/values.yaml
          yq -i -e '(.deployments[] | select(.name == "bot.gateway").image.digest)=env(DIGEST)' charts/dotbot/values.yaml

      - name: Bump Xkcd.Job Helm image version
        if: contains(steps.release.outputs.pr.headBranchName, 'xkcd.job')
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          yq -i -e '(.jobs[] | select(.name == "xkcd.job").image.tag)=env(VERSION)' charts/dotbot/values.yaml
          yq -i -e '(.jobs[] | select(.name == "xkcd.job").image.digest)=env(DIGEST)' charts/dotbot/values.yaml

      - name: Commit values.yaml
        uses: stefanzweifel/git-auto-commit-action@v5
        if: contains(steps.release.outputs.pr.labels, 'helm') == false
        env:
          PR_NAME: "${{ steps.release.outputs.pr.headBranchName }} | awk -F-- '{print $NF}'"
          VERSION: ${{steps.extract_version.outputs.version}}
        with:
          commit_message: 'chore: bump ${{ steps.extract_branch.outputs.pr_name }}. version to ${{ steps.extract_version.outputs.version }}'
          file_pattern: 'charts/dotbot/values.yaml'
          branch: '${{ steps.release.outputs.pr.headBranchName }}'
          
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: ${{ needs.code-changes.outputs.directories != '[]' && needs.code-changes.outputs.directories != '' }}
    strategy:
      matrix:
        path: ${{ fromJSON(needs.code-changes.outputs.directories) }}
        include:
          - exclude: Bot.Gateway
          - exclude: Xkcd.Job
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          path: charts/dotbot
 