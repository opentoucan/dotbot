name: Helm CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - '.github/**'
      - 'charts/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/**'
      - 'charts/**'

jobs:
  helm-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Install dependency charts
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm install postgresql oci://registry-1.docker.io/bitnamicharts/postgresql --set auth.username=test --set auth.password=test --set auth.database=test --set auth.postgresPassword=test
          helm install rabbitmq oci://registry-1.docker.io/bitnamicharts/rabbitmq --set auth.username=test --set auth.password=test
          helm install minio oci://registry-1.docker.io/bitnamicharts/minio
          kubectl create configmap dotbot \
            --from-literal=RabbitMQ__Endpoint='rabbitmq' \
            --from-literal=RabbitMQ__port=5672 \
            --from-literal=S3__ServiceUrl='minio:9000' \
            --from-literal=OTEL_EXPORTER_OTLP_ENDPOINT='http://opentelemetry-operator.default.svc.cluster.local:8080'

          kubectl create secret generic dotbot-secret \
            --from-literal=TestMode=true \
            --from-literal=AWS_ACCESS_KEY_ID='test' \
            --from-literal=AWS_SECRET_ACCESS_KEY='test' \
            --from-literal=ConnectionStrings__dotbot='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;' \
            --from-literal=RabbitMQ__Password='test' \
            --from-literal=RabbitMQ__User='test'
          kubectl create secret generic dotbot-migrator-secret \
            --from-literal=CONNECTIONSTRING='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;'


      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}
