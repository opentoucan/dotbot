---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Helm CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'charts/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'charts/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --config ct.yaml

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1

      - name: Install dependency charts
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm install postgresql oci://registry-1.docker.io/bitnamicharts/postgresql --set auth.username=test --set auth.password=test --set auth.database=test --set auth.postgresPassword=test
          helm install rabbitmq oci://registry-1.docker.io/bitnamicharts/rabbitmq --set auth.username=test --set auth.password=test
          helm install minio oci://registry-1.docker.io/bitnamicharts/minio

          kubectl create secret generic dotbot-secret \
            --from-literal=TestMode=true \
            --from-literal=AWS_ACCESS_KEY_ID='test' \
            --from-literal=AWS_SECRET_ACCESS_KEY='test' \
            --from-literal=ConnectionStrings__dotbot='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;' \
            --from-literal=RabbitMQ__Password='test' \
            --from-literal=RabbitMQ__User='test' \
            --from-literal=Discord__Token=${{ secrets.DISCORD_TOKEN }} \
            --from-literal=Discord__PublicKey=e87f78d71364b3e50cdeda0a8faf446d26df1658e12b164eb139884ecf46a381

          kubectl create secret generic dotbot-migrator-secret \
            --from-literal=CONNECTIONSTRING='Host=postgresql;Port=5432;Database=test;Username=test;Password=test;'

          helm install -f ./charts/dotbot/values.yaml -f ./charts/dotbot/ci/\*-values.yaml dotbot ./charts/dotbot/ --debug

      # - name: Run chart-testing (install)
      #   if: steps.list-changed.outputs.changed == 'true'
      #   run: ct install --config ct.yaml --namespace default

  helm-release:
    if: github.ref_name == github.event.repository.default_branch && github.event_name != 'pull_request'
    needs: ["lint-test"]
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Run chart-releaser
        id: release-chart
        uses: helm/chart-releaser-action@v1
        env:
          CR_TOKEN: "${{ secrets.PAT }}"
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true

      # see https://github.com/helm/chart-releaser/issues/183
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR
        run: |
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://ghcr.io/${{ github.repository_owner }}/charts
          done
